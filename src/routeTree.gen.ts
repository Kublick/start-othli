/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SubscripcionPagoRouteImport } from './routes/subscripcion/pago'
import { Route as DashboardOverviewRouteImport } from './routes/dashboard/overview'
import { Route as DashboardAnalisisRouteImport } from './routes/dashboard/analisis'
import { Route as ConfigCuentasRouteImport } from './routes/config/cuentas'
import { Route as ConfigCategoriasRouteImport } from './routes/config/categorias'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthResetRouteImport } from './routes/auth/reset'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotRouteImport } from './routes/auth/forgot'
import { Route as DashboardFinanzasTransaccionesRouteImport } from './routes/dashboard/finanzas/transacciones'
import { Route as DashboardFinanzasPresupuestosRouteImport } from './routes/dashboard/finanzas/presupuestos'
import { Route as DashboardFinanzasImportarRouteImport } from './routes/dashboard/finanzas/importar'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api/$'

const rootServerRouteImport = createServerRootRoute()

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SubscripcionPagoRoute = SubscripcionPagoRouteImport.update({
  id: '/subscripcion/pago',
  path: '/subscripcion/pago',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardOverviewRoute = DashboardOverviewRouteImport.update({
  id: '/dashboard/overview',
  path: '/dashboard/overview',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAnalisisRoute = DashboardAnalisisRouteImport.update({
  id: '/dashboard/analisis',
  path: '/dashboard/analisis',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfigCuentasRoute = ConfigCuentasRouteImport.update({
  id: '/config/cuentas',
  path: '/config/cuentas',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfigCategoriasRoute = ConfigCategoriasRouteImport.update({
  id: '/config/categorias',
  path: '/config/categorias',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetRoute = AuthResetRouteImport.update({
  id: '/auth/reset',
  path: '/auth/reset',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotRoute = AuthForgotRouteImport.update({
  id: '/auth/forgot',
  path: '/auth/forgot',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardFinanzasTransaccionesRoute =
  DashboardFinanzasTransaccionesRouteImport.update({
    id: '/dashboard/finanzas/transacciones',
    path: '/dashboard/finanzas/transacciones',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardFinanzasPresupuestosRoute =
  DashboardFinanzasPresupuestosRouteImport.update({
    id: '/dashboard/finanzas/presupuestos',
    path: '/dashboard/finanzas/presupuestos',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardFinanzasImportarRoute =
  DashboardFinanzasImportarRouteImport.update({
    id: '/dashboard/finanzas/importar',
    path: '/dashboard/finanzas/importar',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/config/categorias': typeof ConfigCategoriasRoute
  '/config/cuentas': typeof ConfigCuentasRoute
  '/dashboard/analisis': typeof DashboardAnalisisRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/subscripcion/pago': typeof SubscripcionPagoRoute
  '/dashboard/finanzas/importar': typeof DashboardFinanzasImportarRoute
  '/dashboard/finanzas/presupuestos': typeof DashboardFinanzasPresupuestosRoute
  '/dashboard/finanzas/transacciones': typeof DashboardFinanzasTransaccionesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/config/categorias': typeof ConfigCategoriasRoute
  '/config/cuentas': typeof ConfigCuentasRoute
  '/dashboard/analisis': typeof DashboardAnalisisRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/subscripcion/pago': typeof SubscripcionPagoRoute
  '/dashboard/finanzas/importar': typeof DashboardFinanzasImportarRoute
  '/dashboard/finanzas/presupuestos': typeof DashboardFinanzasPresupuestosRoute
  '/dashboard/finanzas/transacciones': typeof DashboardFinanzasTransaccionesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/config/categorias': typeof ConfigCategoriasRoute
  '/config/cuentas': typeof ConfigCuentasRoute
  '/dashboard/analisis': typeof DashboardAnalisisRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/subscripcion/pago': typeof SubscripcionPagoRoute
  '/dashboard/finanzas/importar': typeof DashboardFinanzasImportarRoute
  '/dashboard/finanzas/presupuestos': typeof DashboardFinanzasPresupuestosRoute
  '/dashboard/finanzas/transacciones': typeof DashboardFinanzasTransaccionesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/reset'
    | '/auth/signup'
    | '/auth/verify'
    | '/config/categorias'
    | '/config/cuentas'
    | '/dashboard/analisis'
    | '/dashboard/overview'
    | '/subscripcion/pago'
    | '/dashboard/finanzas/importar'
    | '/dashboard/finanzas/presupuestos'
    | '/dashboard/finanzas/transacciones'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/reset'
    | '/auth/signup'
    | '/auth/verify'
    | '/config/categorias'
    | '/config/cuentas'
    | '/dashboard/analisis'
    | '/dashboard/overview'
    | '/subscripcion/pago'
    | '/dashboard/finanzas/importar'
    | '/dashboard/finanzas/presupuestos'
    | '/dashboard/finanzas/transacciones'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/reset'
    | '/auth/signup'
    | '/auth/verify'
    | '/config/categorias'
    | '/config/cuentas'
    | '/dashboard/analisis'
    | '/dashboard/overview'
    | '/subscripcion/pago'
    | '/dashboard/finanzas/importar'
    | '/dashboard/finanzas/presupuestos'
    | '/dashboard/finanzas/transacciones'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  AuthForgotRoute: typeof AuthForgotRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetRoute: typeof AuthResetRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  ConfigCategoriasRoute: typeof ConfigCategoriasRoute
  ConfigCuentasRoute: typeof ConfigCuentasRoute
  DashboardAnalisisRoute: typeof DashboardAnalisisRoute
  DashboardOverviewRoute: typeof DashboardOverviewRoute
  SubscripcionPagoRoute: typeof SubscripcionPagoRoute
  DashboardFinanzasImportarRoute: typeof DashboardFinanzasImportarRoute
  DashboardFinanzasPresupuestosRoute: typeof DashboardFinanzasPresupuestosRoute
  DashboardFinanzasTransaccionesRoute: typeof DashboardFinanzasTransaccionesRoute
}
export interface FileServerRoutesByFullPath {
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/$'
  id: '__root__' | '/api/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSplatServerRoute: typeof ApiSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/subscripcion/pago': {
      id: '/subscripcion/pago'
      path: '/subscripcion/pago'
      fullPath: '/subscripcion/pago'
      preLoaderRoute: typeof SubscripcionPagoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/overview': {
      id: '/dashboard/overview'
      path: '/dashboard/overview'
      fullPath: '/dashboard/overview'
      preLoaderRoute: typeof DashboardOverviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/analisis': {
      id: '/dashboard/analisis'
      path: '/dashboard/analisis'
      fullPath: '/dashboard/analisis'
      preLoaderRoute: typeof DashboardAnalisisRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/config/cuentas': {
      id: '/config/cuentas'
      path: '/config/cuentas'
      fullPath: '/config/cuentas'
      preLoaderRoute: typeof ConfigCuentasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/config/categorias': {
      id: '/config/categorias'
      path: '/config/categorias'
      fullPath: '/config/categorias'
      preLoaderRoute: typeof ConfigCategoriasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset': {
      id: '/auth/reset'
      path: '/auth/reset'
      fullPath: '/auth/reset'
      preLoaderRoute: typeof AuthResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot': {
      id: '/auth/forgot'
      path: '/auth/forgot'
      fullPath: '/auth/forgot'
      preLoaderRoute: typeof AuthForgotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/finanzas/transacciones': {
      id: '/dashboard/finanzas/transacciones'
      path: '/dashboard/finanzas/transacciones'
      fullPath: '/dashboard/finanzas/transacciones'
      preLoaderRoute: typeof DashboardFinanzasTransaccionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/finanzas/presupuestos': {
      id: '/dashboard/finanzas/presupuestos'
      path: '/dashboard/finanzas/presupuestos'
      fullPath: '/dashboard/finanzas/presupuestos'
      preLoaderRoute: typeof DashboardFinanzasPresupuestosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/finanzas/importar': {
      id: '/dashboard/finanzas/importar'
      path: '/dashboard/finanzas/importar'
      fullPath: '/dashboard/finanzas/importar'
      preLoaderRoute: typeof DashboardFinanzasImportarRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  AuthForgotRoute: AuthForgotRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetRoute: AuthResetRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  ConfigCategoriasRoute: ConfigCategoriasRoute,
  ConfigCuentasRoute: ConfigCuentasRoute,
  DashboardAnalisisRoute: DashboardAnalisisRoute,
  DashboardOverviewRoute: DashboardOverviewRoute,
  SubscripcionPagoRoute: SubscripcionPagoRoute,
  DashboardFinanzasImportarRoute: DashboardFinanzasImportarRoute,
  DashboardFinanzasPresupuestosRoute: DashboardFinanzasPresupuestosRoute,
  DashboardFinanzasTransaccionesRoute: DashboardFinanzasTransaccionesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSplatServerRoute: ApiSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
